#!/usr/bin/env ruby

require_relative '../lib/jumping_chess'

if ENV["PROFILE"]
  require 'stackprof'
  StackProf.start(mode: :cpu)
  at_exit do
    StackProf.stop
    StackProf.results("#{Dir.pwd}/cpu.dump")
  end
end

def main(argv)
  load = (argv[0] and File.exist?(argv[0])) ? argv.shift : nil

  turns = Integer(argv[0] || 10)
  max_depth1 = Integer(argv[1] || 1)
  strategy1 = argv[2] || "negamax"
  strategy2 = argv[3] || strategy1
  max_depth2 = Integer(argv[4] || max_depth1)

  p1 = Player.new(1, strategy1, max_depth1)
  p2 = Player.new(2, strategy2, max_depth2)
  game = Game.new(p1, p2, INITIAL_STATE, first_player: p2)
  game.show

  if load
    game.load(load)
    puts "Loaded #{load}"
  end

  game.run(turns)
end

if $0 == __FILE__
  main(ARGV)
end
