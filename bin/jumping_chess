#!/usr/bin/env ruby

require_relative '../lib/jumping_chess'

LOAD = (ARGV[0] and File.exist?(ARGV[0])) ? ARGV.shift : nil

TURNS = Integer(ARGV[0] || 10)
MAX_DEPTH1 = Integer(ARGV[1] || 1)
STRATEGY1 = ARGV[2] || "minimax"
STRATEGY2 = ARGV[3] || STRATEGY1
MAX_DEPTH2 = Integer(ARGV[4] || MAX_DEPTH1)

p1 = Player.new(1, STRATEGY1, MAX_DEPTH1)
p2 = Player.new(2, STRATEGY2, MAX_DEPTH2)
game = Game.new(p1, p2, INITIAL_STATE)

if LOAD
  game.load(LOAD)
  puts "Loaded #{LOAD}"
  game.show(scores: true)
end

if ENV["PROFILE"]
  require 'stackprof'
  StackProf.start(mode: :cpu)
  at_exit do
    StackProf.stop
    StackProf.results("#{Dir.pwd}/cpu.dump")
  end
end

while game.current_turn < TURNS and !game.finished?
  game.turn
  game.show(scores: true)
end

if game.finished?
  puts "Player #{game.winner.inspect} won!"
end
