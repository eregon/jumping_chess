#!/usr/bin/env ruby

require_relative '../lib/jumping_chess'

load = (ARGV[0] and File.exist?(ARGV[0])) ? ARGV.shift : nil

turns = Integer(ARGV[0] || 10)
max_depth1 = Integer(ARGV[1] || 1)
strategy1 = ARGV[2] || "negamax"
strategy2 = ARGV[3] || strategy1
max_depth2 = Integer(ARGV[4] || max_depth1)

p1 = Player.new(1, strategy1, max_depth1)
p2 = Player.new(2, strategy2, max_depth2)
game = Game.new(p1, p2, INITIAL_STATE, first_player: p2)
game.show

if load
  game.load(load)
  puts "Loaded #{load}"
end

if ENV["PROFILE"]
  require 'stackprof'
  StackProf.start(mode: :cpu)
  at_exit do
    StackProf.stop
    StackProf.results("#{Dir.pwd}/cpu.dump")
  end
end

while game.turn < turns and !game.finished?
  game.play
  game.show
end

if game.finished?
  puts "Player #{game.winner.inspect} won!"
end
